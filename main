-- vital --
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/heavyraining/ModifiedKavoUI/main/main"))()

local colors = {
	SchemeColor = Color3.fromRGB(46, 48, 43),
	Background = Color3.fromRGB(13, 15, 12),
	Header = Color3.fromRGB(36, 38, 35),
	TextColor = Color3.fromRGB(152, 99, 53),
	ElementColor = Color3.fromRGB(24, 24, 24)
}

local Window = Library.CreateLib("Life Sentence (by @therapisttt)", colors)

-- tabs --
local PlayersTab = Window:NewTab("Players")
local CraftingTab = Window:NewTab("Crafting")
local SettingsTab = Window:NewTab("UI Settings")

-- sections --
local PlayersSection = PlayersTab:NewSection("Players")
local PlayersAimlockSection = PlayersTab:NewSection("Aimlock")

local ResourcesSection = CraftingTab:NewSection("Resource ESP")
local ResourceFarmSection = CraftingTab:NewSection("Resource Farming")

local SettingsSection = SettingsTab:NewSection("UI Settings")
local ColourSection = SettingsTab:NewSection("UI Colours")

-- variables --
local scriptIcon = "rbxassetid://9756596201"

local selectedPlayer = nil

local resourceEsp = false
local resourceSafeMode = true

local aimlockTargets = {}

-- functions --
local function findIndex(tbl, value)
	for i, v in ipairs(tbl) do
		if v == value then
			return i
		end
	end
	return nil
end

local function separateTable(tbl)
	local str = ""
	for i, v in ipairs(tbl) do
		str = str .. v.Name
		if i < #tbl then
			str = str .. ", "
		end
	end
	
	return str
end


local function notify(title, text, duration, button1, button2)
	if button1 then
		if not button2 then
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = title,
				Text = text,
				Icon = scriptIcon,
				Duration = duration,
				Button1 = button1
			})
		else
			game:GetService("StarterGui"):SetCore("SendNotification", {
				Title = title,
				Text = text,
				Icon = scriptIcon,
				Duration = duration,
				Button1 = button1,
				Button2 = button2
			})
		end
	else
		game:GetService("StarterGui"):SetCore("SendNotification", {
			Title = title,
			Text = text,
			Icon = scriptIcon,
			Duration = duration
		})
	end
end

local function refreshPlayerDropdown(dropdown)
	local receivedPlayers = {}
	for _, playerOption in ipairs(game:GetService("Players"):GetPlayers()) do
		if not table.find(receivedPlayers, playerOption.Name) then
			table.insert(receivedPlayers, playerOption.Name)
		end
	end
	dropdown:Refresh(receivedPlayers)
end

local playerSelectionDropdown = PlayersSection:NewDropdown("Select Player", "Selects a player for anything in the script", nil, function(currentOption)
	selectedPlayer = game:GetService("Players"):FindFirstChild(currentOption)
	notify("Selected Player", currentOption.." has been selected", 3, "Okay...")
end)

PlayersAimlockSection:NewButton("Target Selected Player", "Targets selected player with aimlock", function()
	if selectedPlayer then
		if not table.find(aimlockTargets, selectedPlayer) then
			table.insert(aimlockTargets, selectedPlayer)
			notify("Targeting Player", selectedPlayer.Name.." is now being targeted", 3, "Thanks I guess?..")
		else
			notify("Already Targeting", selectedPlayer.Name.." is already being targeted.", 3, "Okay...")
		end
	else
		notify("No Selected Player", "You haven't selected a player to target yet.", 3, "Okay...")
	end
end)

PlayersAimlockSection:NewButton("Untarget Selected Player", "Removes selected player from list of aimlocking targets", function()
	if selectedPlayer then
		if table.find(aimlockTargets, selectedPlayer) then
			table.remove(aimlockTargets, findIndex(aimlockTargets, selectedPlayer))
			notify("Player Removed", selectedPlayer.Name.." is no longer being targeted", 3, "Thanks I guess?..")
		else
			notify("Not Targeted", selectedPlayer.Name.." isn't being targeted.", 3, "Okay...")
		end
	else
		notify("No Selected Player", "You haven't selected a player to untarget yet.", 3, "Okay...")
	end
end)

PlayersAimlockSection:NewButton("Get Targeted Players", "Notifies you of all players targeted", function()
	if #aimlockTargets > 0 then
		notify("Targeted Players", separateTable(aimlockTargets), 10, "Close")
	else
		notify("Targeted Players", "No one is being targeted at the moment...", 3, "Close")
	end
end)

refreshPlayerDropdown(playerSelectionDropdown)

game:GetService("Players").PlayerAdded:Connect(function(playerInQuestion)
	refreshPlayerDropdown(playerSelectionDropdown)
end)

game:GetService("Players").PlayerRemoving:Connect(function(playerInQuestion)
	if playerInQuestion == selectedPlayer then
		selectedPlayer = nil
	end
	refreshPlayerDropdown(playerSelectionDropdown)
end)

PlayersAimlockSection:NewToggle("Aimlock", "Toggles aimlocking", function(state)
	if state then
		if not aimlockConnection then
			local Players = game:GetService("Players")
			local LocalPlayer = Players.LocalPlayer
			local RunService = game:GetService("RunService")
			local UserInputService = game:GetService("UserInputService")

			local function getNearestPlayer()
				local nearestPlayer = nil
				local shortestDistance = math.huge

				local playersRole = LocalPlayer.Backpack:FindFirstChild("Handcuffs") and "cop" or "prisoner"

				for _, unfilteredPlayer in ipairs(Players:GetPlayers()) do
					local enemiesRole = unfilteredPlayer.Backpack:FindFirstChild("Handcuffs") and "cop" or "prisoner"
					local head = unfilteredPlayer.Character and unfilteredPlayer.Character:FindFirstChild("Head")
					if head then
						local distance = (head.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
						local origin = LocalPlayer.Character.HumanoidRootPart.Position
						local direction = (head.Position - origin).Unit * distance
						local raycastParams = RaycastParams.new()
						raycastParams.FilterDescendantsInstances = {LocalPlayer.Character, unfilteredPlayer.Character}
						raycastParams.FilterType = Enum.RaycastFilterType.Exclude
						local raycastResult = workspace:Raycast(origin, direction, raycastParams)

						local isBehindWall = raycastResult ~= nil
						local notDowned = not unfilteredPlayer.Backpack.Stats.Downed.Value

						if table.find(aimlockTargets, unfilteredPlayer) and not isBehindWall and notDowned and enemiesRole ~= playersRole then
							if distance < shortestDistance then
								shortestDistance = distance
								nearestPlayer = unfilteredPlayer
							end
						end
					end
				end

				return nearestPlayer
			end

			local function lookAtNearestPlayerHead()
				local nearestPlayer = getNearestPlayer()
				if nearestPlayer and nearestPlayer.Character then
					local part = nearestPlayer.Character:FindFirstChild("Head")
					if part then
						workspace.CurrentCamera.CFrame = CFrame.lookAt(LocalPlayer.Character.Head.Position, Vector3.new(part.Position.X, LocalPlayer.Character.HumanoidRootPart.Position.Y, part.Position.Z))
					end
				end
			end

			aimlockConnection = RunService.RenderStepped:Connect(lookAtNearestPlayerHead)
			RunService:BindToRenderStep("MouseLock", Enum.RenderPriority.Last.Value + 1, function()
				UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
			end)

			notify("Aimlock Toggled", "Now locking onto players", 2, "Thanks?..")
		else
			notify("Aimlock Already On", "Aimlock is already on", 2, "Okay...")
		end
	else
		if aimlockConnection then
			aimlockConnection:Disconnect()
			aimlockConnection = nil
			game:GetService("RunService"):UnbindFromRenderStep("MouseLock")
			notify("Aimlock Toggled", "No longer locking onto players", 2, "Thanks?..")
		else
			notify("Aimlock Already Off", "Aimlock isn't even on yet", 2, "Okay...")
		end
	end
end)

local function findLootSpawns()
	local spawnsWithLoot = {}
	for _, lootSpawn in ipairs(game:GetService("Workspace"):WaitForChild("SpawnsLoot"):GetChildren()) do
		for _, possibleLoot in ipairs(lootSpawn:GetChildren()) do
			if possibleLoot.Transparency == 0 then
				table.insert(spawnsWithLoot, possibleLoot)
			end
		end
	end
	return spawnsWithLoot
end

ResourcesSection:NewToggle("Resource ESP", "Highlights all resources on the map", function(state)
	resourceEsp = state
	if state then
		notify("Resource ESP Enabled", "All resources on the map will be highlighted", 2, "Cool.")
	else
		notify("Resource ESP Disabled", "Resources will no longer be highlighted.", 2, "Cool.")
	end
end)

ResourceFarmSection:NewButton("Grab All Resources", "Teleports to all resources on map", function()
	local oldPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	local resourceCount = 0
	if resourceSafeMode then
		local loopCounter = 0
		for _, loot in ipairs(game.Workspace.SpawnsLoot:GetChildren()) do
			for _, possibleLoot in ipairs(loot:GetChildren()) do
				if possibleLoot.Transparency == 0 then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = possibleLoot.CFrame
					possibleLoot.Parent.Part.Attachment.ProximityPrompt.RequiresLineOfSight = false
					fireproximityprompt(possibleLoot.Parent.Part.Attachment.ProximityPrompt, 7)
					resourceCount = resourceCount + 1
					wait(0.5)
					loopCounter = loopCounter + 1
					if loopCounter % 5 == 0 then
						wait(5)
					end
				end
			end
		end
	else
		for _, loot in ipairs(game.Workspace.SpawnsLoot:GetChildren()) do
			for _, possibleLoot in ipairs(loot:GetChildren()) do
				if possibleLoot.Transparency == 0 then
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = possibleLoot.CFrame
					possibleLoot.Parent.Part.Attachment.ProximityPrompt.RequiresLineOfSight = false
					fireproximityprompt(possibleLoot.Parent.Part.Attachment.ProximityPrompt, 7)
					resourceCount = resourceCount + 1
					wait(0.1)
				end
			end
		end
	end
	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = oldPosition
	notify("Finished", "The resource sweep returned "..resourceCount.." resources.", 2, "Okay...")
end)

ResourceFarmSection:NewToggle("Disable Safemode", "Highlights all resources on the map", function(state)
	resourceSafeMode = state
	if state then
		notify("RISKY", "The anti-teleport might respawn you causing you to lose your items!", 2, "Yeah, I know.")
	else
		notify("SAFE", "Intervals are now resumed to mitigate anti-cheat.", 2, "Better safe than sorry.")
	end
end)

PlayersSection:NewDropdown("Teleport", "Teleports to specified locations", {"Safezone 1", "Safezone 2", "Sewers", "Labour Hall"}, function(currentOption)
	local function teleport(cframe:CFrame)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = cframe
	end

	if currentOption == "Safezone 1" then
		teleport(CFrame.new(989.334595, -36.9323578, 113.808022, -0.516784668, -1.02094888e-09, 0.856115401, -1.29890843e-09, 1, 4.08464734e-10, -0.856115401, -9.00927222e-10, -0.516784668))
	end
	if currentOption == "Safezone 2" then
		teleport(CFrame.new(348.720795, 30.9573174, 7.87970161, 0.992949367, -2.39472655e-08, -0.118539199, 2.8326177e-08, 1, 3.52557876e-08, 0.118539199, -3.8364977e-08, 0.992949367))
	end
	if currentOption == "Sewers" then
		teleport(CFrame.new(964.931152, -36.9324341, -150.201202, 0.248490855, 4.23862581e-08, -0.968634248, -7.6278269e-08, 1, 2.41905607e-08, 0.968634248, 6.78746161e-08, 0.248490855))
	end
	if currentOption == "Labour Hall" then
		teleport(CFrame.new(1112.60217, 7.41163683, -103.188873, 0.829156518, -3.68015514e-11, -0.559016526, 4.27621855e-10, 1, 5.684338e-10, 0.559016526, -7.1036832e-10, 0.829156518))
	end
end)

SettingsSection:NewKeybind("Toggle UI Keybind", "Default key is RightShift", Enum.KeyCode.RightShift, function()
	Library:ToggleUI()
end)

for theme, color in pairs(colors) do
	ColourSection:NewColorPicker(theme, "Change your "..theme, color, function(color3)
		Library:ChangeColor(theme, color3)
	end)
end

-- do not touch --
local resourceEspCoroutine = coroutine.create(function()
	local existingEsp = {}
	while game:GetService("RunService").RenderStepped:Wait() do
		if resourceEsp then
			local resources = findLootSpawns()
			for _, resourceFound in ipairs(resources) do
				if not resourceFound:FindFirstChildWhichIsA("BillboardGui") then
					local esp = Instance.new("BillboardGui")
					local resourceName = Instance.new("TextLabel")
					local backgroundImage = Instance.new("ImageLabel")
					esp.Size = UDim2.new(0, 200, 0, 50)
					esp.AlwaysOnTop = true
					resourceName.BackgroundTransparency = 1
					resourceName.TextColor3 = Color3.new(1, 1, 1)
					resourceName.TextStrokeTransparency = 0
					resourceName.TextScaled = true
					resourceName.Text = resourceFound.Name
					resourceName.Font = Enum.Font.PermanentMarker
					resourceName.Size = UDim2.new(1, 0, 1, 0)
					resourceName.ZIndex = 2
					resourceName.Parent = esp
					backgroundImage.BackgroundTransparency = 1
					backgroundImage.Image = "rbxassetid://11638911086"
					backgroundImage.Size = UDim2.new(1, 0, 1, 0)
					backgroundImage.ImageTransparency = 0.5
					backgroundImage.Parent = esp
					esp.Parent = resourceFound
					table.insert(existingEsp, esp)
				end
			end
		else
			for _, resourceEsp in ipairs(existingEsp) do
				resourceEsp:Destroy()
			end
			existingEsp = {}
		end
		for i = #existingEsp, 1, -1 do
			local espToCheck = existingEsp[i]
			if espToCheck.Parent and espToCheck.Parent.Transparency == 1 then
				table.remove(existingEsp, i)
				espToCheck:Destroy()
			end
		end
	end
end)
coroutine.resume(resourceEspCoroutine)
